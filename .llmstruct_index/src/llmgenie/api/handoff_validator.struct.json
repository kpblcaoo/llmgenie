{
  "module_id": "src.llmgenie.api.handoff_validator",
  "path": "src/llmgenie/api/handoff_validator.py",
  "category": "core",
  "module_doc": "Handoff validation module for llmgenie\nImplements automated completeness validation for context transfer packages\nBased on 016_context_transfer_protocol atomic rule",
  "functions": [
    {
      "name": "__init__",
      "docstring": "",
      "line_range": [
        83,
        84
      ],
      "parameters": [
        "self",
        "project_root"
      ],
      "decorators": []
    },
    {
      "name": "validate_package",
      "docstring": "Validate complete handoff package",
      "line_range": [
        86,
        125
      ],
      "parameters": [
        "self",
        "package"
      ],
      "decorators": []
    },
    {
      "name": "_validate_files",
      "docstring": "Validate individual files in package",
      "line_range": [
        127,
        143
      ],
      "parameters": [
        "self",
        "files"
      ],
      "decorators": []
    },
    {
      "name": "_find_missing_files",
      "docstring": "Find missing required file types",
      "line_range": [
        145,
        149
      ],
      "parameters": [
        "self",
        "files"
      ],
      "decorators": []
    },
    {
      "name": "_validate_startup_prompt",
      "docstring": "Validate startup prompt content",
      "line_range": [
        151,
        161
      ],
      "parameters": [
        "self",
        "prompt"
      ],
      "decorators": []
    },
    {
      "name": "_validate_control_questions",
      "docstring": "Validate control questions",
      "line_range": [
        163,
        173
      ],
      "parameters": [
        "self",
        "questions"
      ],
      "decorators": []
    },
    {
      "name": "_calculate_completeness_score",
      "docstring": "Calculate overall completeness score",
      "line_range": [
        175,
        206
      ],
      "parameters": [
        "self",
        "file_validation",
        "prompt_validation",
        "questions_validation"
      ],
      "decorators": []
    },
    {
      "name": "_generate_warnings",
      "docstring": "Generate validation warnings",
      "line_range": [
        208,
        231
      ],
      "parameters": [
        "self",
        "package",
        "file_validation",
        "prompt_validation",
        "questions_validation"
      ],
      "decorators": []
    },
    {
      "name": "_generate_recommendations",
      "docstring": "Generate improvement recommendations",
      "line_range": [
        233,
        251
      ],
      "parameters": [
        "self",
        "package",
        "missing_files",
        "warnings"
      ],
      "decorators": []
    }
  ],
  "classes": [
    {
      "name": "HandoffFile",
      "docstring": "Single file in handoff package",
      "line_range": [
        15,
        21
      ],
      "methods": [],
      "bases": [
        "BaseModel"
      ]
    },
    {
      "name": "StartupPrompt",
      "docstring": "Startup prompt validation",
      "line_range": [
        23,
        29
      ],
      "methods": [],
      "bases": [
        "BaseModel"
      ]
    },
    {
      "name": "ControlQuestions",
      "docstring": "Control questions validation",
      "line_range": [
        31,
        37
      ],
      "methods": [],
      "bases": [
        "BaseModel"
      ]
    },
    {
      "name": "HandoffPackage",
      "docstring": "Complete handoff package for validation",
      "line_range": [
        39,
        48
      ],
      "methods": [],
      "bases": [
        "BaseModel"
      ]
    },
    {
      "name": "ValidationResult",
      "docstring": "Handoff validation result",
      "line_range": [
        50,
        67
      ],
      "methods": [],
      "bases": [
        "BaseModel"
      ]
    },
    {
      "name": "HandoffValidator",
      "docstring": "Core handoff validation logic",
      "line_range": [
        69,
        251
      ],
      "methods": [
        {
          "name": "__init__",
          "docstring": "",
          "line_range": [
            83,
            84
          ],
          "parameters": [
            "self",
            "project_root"
          ]
        },
        {
          "name": "validate_package",
          "docstring": "Validate complete handoff package",
          "line_range": [
            86,
            125
          ],
          "parameters": [
            "self",
            "package"
          ]
        },
        {
          "name": "_validate_files",
          "docstring": "Validate individual files in package",
          "line_range": [
            127,
            143
          ],
          "parameters": [
            "self",
            "files"
          ]
        },
        {
          "name": "_find_missing_files",
          "docstring": "Find missing required file types",
          "line_range": [
            145,
            149
          ],
          "parameters": [
            "self",
            "files"
          ]
        },
        {
          "name": "_validate_startup_prompt",
          "docstring": "Validate startup prompt content",
          "line_range": [
            151,
            161
          ],
          "parameters": [
            "self",
            "prompt"
          ]
        },
        {
          "name": "_validate_control_questions",
          "docstring": "Validate control questions",
          "line_range": [
            163,
            173
          ],
          "parameters": [
            "self",
            "questions"
          ]
        },
        {
          "name": "_calculate_completeness_score",
          "docstring": "Calculate overall completeness score",
          "line_range": [
            175,
            206
          ],
          "parameters": [
            "self",
            "file_validation",
            "prompt_validation",
            "questions_validation"
          ]
        },
        {
          "name": "_generate_warnings",
          "docstring": "Generate validation warnings",
          "line_range": [
            208,
            231
          ],
          "parameters": [
            "self",
            "package",
            "file_validation",
            "prompt_validation",
            "questions_validation"
          ]
        },
        {
          "name": "_generate_recommendations",
          "docstring": "Generate improvement recommendations",
          "line_range": [
            233,
            251
          ],
          "parameters": [
            "self",
            "package",
            "missing_files",
            "warnings"
          ]
        }
      ],
      "bases": []
    }
  ],
  "callgraph": {
    "__init__": [
      "Path"
    ],
    "validate_package": [
      "len",
      "all",
      "self._find_missing_files",
      "self._calculate_completeness_score",
      "file_validation.values",
      "self._validate_startup_prompt",
      "ValidationResult",
      "self._validate_control_questions",
      "self._validate_files",
      "self._generate_warnings",
      "self._generate_recommendations"
    ],
    "_validate_files": [
      "file_path.exists",
      "file_path.stat"
    ],
    "_find_missing_files": [
      "set",
      "list"
    ],
    "_validate_startup_prompt": [
      "prompt.lower",
      "StartupPrompt"
    ],
    "_validate_control_questions": [
      "ControlQuestions",
      "len"
    ],
    "_calculate_completeness_score": [
      "len",
      "max",
      "sum",
      "file_validation.values"
    ],
    "_generate_warnings": [
      "len",
      "file_validation.items",
      "all",
      "file_validation.values",
      "warnings.append"
    ],
    "_generate_recommendations": [
      "len",
      "recommendations.append"
    ]
  },
  "dependencies": [
    "BaseModel",
    "Dict",
    "Field",
    "List",
    "Optional",
    "Path",
    "Union",
    "datetime",
    "json",
    "os",
    "pathlib",
    "pydantic",
    "typing"
  ],
  "hash": "95e1fca4753701656be3b38544e6201c6077ce68a7837cc24ecc6ae98625cbc3",
  "artifact_id": "ddc867cb-44f5-4c4d-99a4-3cb4764efc78"
}