{
  "module_id": "src.llmgenie.api.simple_mcp_server",
  "path": "src/llmgenie/api/simple_mcp_server.py",
  "category": "core",
  "module_doc": "Simple MCP Server for llmgenie\nUses stdio transport without FastAPI dependencies",
  "functions": [
    {
      "name": "health_check",
      "docstring": "Health check endpoint",
      "line_range": [
        16,
        22
      ],
      "parameters": [],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "get_project_state",
      "docstring": "Get current project state",
      "line_range": [
        25,
        54
      ],
      "parameters": [],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "execute_agent_task",
      "docstring": "Execute a task with specified agent",
      "line_range": [
        57,
        68
      ],
      "parameters": [
        "agent_type",
        "task",
        "context"
      ],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "get_agent_status",
      "docstring": "Get status of specific agent",
      "line_range": [
        71,
        77
      ],
      "parameters": [
        "agent_id"
      ],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "get_rules_manifest",
      "docstring": "Get rules manifest",
      "line_range": [
        80,
        94
      ],
      "parameters": [],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "get_workflow_modes",
      "docstring": "Get available workflow modes",
      "line_range": [
        97,
        104
      ],
      "parameters": [],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "validate_handoff_package",
      "docstring": "Validate handoff package completeness",
      "line_range": [
        107,
        136
      ],
      "parameters": [
        "package"
      ],
      "decorators": [
        "mcp.tool()"
      ]
    },
    {
      "name": "get_handoff_template",
      "docstring": "Get handoff package template",
      "line_range": [
        139,
        172
      ],
      "parameters": [],
      "decorators": [
        "mcp.tool()"
      ]
    }
  ],
  "classes": [],
  "callgraph": {
    "health_check": [
      "mcp.tool",
      "datetime.now"
    ],
    "get_project_state": [
      "Path",
      "str",
      "mcp.tool",
      "open",
      "state.get",
      "json.load",
      "state_file.exists"
    ],
    "execute_agent_task": [
      "mcp.tool",
      "datetime.now"
    ],
    "get_agent_status": [
      "mcp.tool"
    ],
    "get_rules_manifest": [
      "Path",
      "str",
      "mcp.tool",
      "open",
      "json.load",
      "manifest_file.exists"
    ],
    "get_workflow_modes": [
      "mcp.tool"
    ],
    "validate_handoff_package": [
      "len",
      "mcp.tool",
      "str",
      "min",
      "package.get"
    ],
    "get_handoff_template": [
      "mcp.tool"
    ]
  },
  "dependencies": [
    "FastMCP",
    "Path",
    "datetime",
    "json",
    "mcp.server.fastmcp",
    "os",
    "pathlib"
  ],
  "hash": "9cb3574a738a8dd3591f9647deead6a732aeffb5552cdd2c58b23c1d5ea46c1a",
  "artifact_id": "26cf6bfe-43ec-42b8-9d3a-f9a1db2c95ad"
}