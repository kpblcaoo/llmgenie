{
  "module_id": "tests.orchestration.fixtures",
  "path": "tests/orchestration/fixtures.py",
  "category": "test",
  "module_doc": "Shared test fixtures for orchestration testing\n\nEpic 5 Phase 3.2: Modular test utilities\nSingle responsibility: Common test setup utilities",
  "functions": [
    {
      "name": "create_mock_router",
      "docstring": "Create standardized mock ModelRouter for testing",
      "line_range": [
        15,
        39
      ],
      "parameters": [
        "model_name"
      ],
      "decorators": []
    },
    {
      "name": "create_mock_classification",
      "docstring": "Create standardized mock classification for testing",
      "line_range": [
        50,
        56
      ],
      "parameters": [
        "task_type",
        "confidence"
      ],
      "decorators": []
    },
    {
      "name": "mock_agent_routers",
      "docstring": "Standard set of mock agent routers for testing",
      "line_range": [
        60,
        66
      ],
      "parameters": [],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "sample_task",
      "docstring": "Standard orchestration task for testing",
      "line_range": [
        70,
        79
      ],
      "parameters": [],
      "decorators": [
        "pytest.fixture"
      ]
    }
  ],
  "classes": [
    {
      "name": "MockClassification",
      "docstring": "Mock classification result for testing",
      "line_range": [
        43,
        47
      ],
      "methods": [],
      "bases": []
    }
  ],
  "callgraph": {
    "create_mock_router": [
      "RoutingDecision",
      "AsyncMock",
      "Mock"
    ],
    "create_mock_classification": [
      "MockClassification"
    ],
    "mock_agent_routers": [
      "create_mock_router"
    ],
    "sample_task": [
      "OrchestrationTask"
    ]
  },
  "dependencies": [
    "AsyncMock",
    "Mock",
    "ModelChoice",
    "ModelRouter",
    "OrchestrationTask",
    "RoutingDecision",
    "dataclass",
    "dataclasses",
    "pytest",
    "src.llmgenie.orchestration.core",
    "src.llmgenie.task_router",
    "unittest.mock"
  ],
  "hash": "336e9732d4a736487f06c17e382e2a4c901a3c91d1832fa7cdfa1275d305a844",
  "artifact_id": "2dff30a6-c7d8-4267-9605-8d74315253b3"
}