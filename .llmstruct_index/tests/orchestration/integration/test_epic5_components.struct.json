{
  "module_id": "tests.orchestration.integration.test_epic5_components",
  "path": "tests/orchestration/integration/test_epic5_components.py",
  "category": "test",
  "module_doc": "Test integration with Epic 5 components\n\nEpic 5 Phase 3.2: Modular integration tests\nSingle responsibility: Test Epic 5 TaskRouter/ModelRouter integration only",
  "functions": [
    {
      "name": "orchestrator_with_classifier",
      "docstring": "Create orchestrator with TaskClassifier integration",
      "line_range": [
        20,
        32
      ],
      "parameters": [
        "self"
      ],
      "decorators": [
        "pytest.fixture"
      ]
    },
    {
      "name": "test_auto_mode_selection",
      "docstring": "Test automatic mode selection using TaskClassifier",
      "line_range": [
        35,
        47
      ],
      "parameters": [
        "self",
        "orchestrator_with_classifier"
      ],
      "decorators": [
        "pytest.mark.asyncio"
      ]
    },
    {
      "name": "test_model_router_interface_compliance",
      "docstring": "Test that orchestration correctly uses ModelRouter interface",
      "line_range": [
        50,
        70
      ],
      "parameters": [
        "self"
      ],
      "decorators": [
        "pytest.mark.asyncio"
      ]
    },
    {
      "name": "test_orchestrator_stats_with_classifier",
      "docstring": "Test orchestrator stats when TaskClassifier is available",
      "line_range": [
        72,
        79
      ],
      "parameters": [
        "self",
        "orchestrator_with_classifier"
      ],
      "decorators": []
    },
    {
      "name": "test_orchestrator_stats_without_classifier",
      "docstring": "Test orchestrator stats when TaskClassifier is not available",
      "line_range": [
        81,
        90
      ],
      "parameters": [
        "self"
      ],
      "decorators": []
    }
  ],
  "classes": [
    {
      "name": "TestEpic5Integration",
      "docstring": "Test integration with Epic 5 TaskRouter components",
      "line_range": [
        16,
        90
      ],
      "methods": [
        {
          "name": "orchestrator_with_classifier",
          "docstring": "Create orchestrator with TaskClassifier integration",
          "line_range": [
            20,
            32
          ],
          "parameters": [
            "self"
          ]
        },
        {
          "name": "test_auto_mode_selection",
          "docstring": "Test automatic mode selection using TaskClassifier",
          "line_range": [
            35,
            47
          ],
          "parameters": [
            "self",
            "orchestrator_with_classifier"
          ]
        },
        {
          "name": "test_model_router_interface_compliance",
          "docstring": "Test that orchestration correctly uses ModelRouter interface",
          "line_range": [
            50,
            70
          ],
          "parameters": [
            "self"
          ]
        },
        {
          "name": "test_orchestrator_stats_with_classifier",
          "docstring": "Test orchestrator stats when TaskClassifier is available",
          "line_range": [
            72,
            79
          ],
          "parameters": [
            "self",
            "orchestrator_with_classifier"
          ]
        },
        {
          "name": "test_orchestrator_stats_without_classifier",
          "docstring": "Test orchestrator stats when TaskClassifier is not available",
          "line_range": [
            81,
            90
          ],
          "parameters": [
            "self"
          ]
        }
      ],
      "bases": []
    }
  ],
  "callgraph": {
    "orchestrator_with_classifier": [
      "AsyncMock",
      "create_mock_classification",
      "AgentOrchestrator",
      "create_mock_router",
      "Mock"
    ],
    "test_auto_mode_selection": [
      "orchestrator_with_classifier.orchestrate",
      "create_mock_classification"
    ],
    "test_model_router_interface_compliance": [
      "AgentOrchestrator",
      "create_mock_router",
      "orchestrator.orchestrate"
    ],
    "test_orchestrator_stats_with_classifier": [
      "len",
      "orchestrator_with_classifier.get_orchestration_stats"
    ],
    "test_orchestrator_stats_without_classifier": [
      "AgentOrchestrator",
      "create_mock_router",
      "orchestrator.get_orchestration_stats"
    ]
  },
  "dependencies": [
    "AgentOrchestrator",
    "AsyncMock",
    "ExecutionMode",
    "Mock",
    "TaskClassifier",
    "create_mock_classification",
    "create_mock_router",
    "fixtures",
    "pytest",
    "src.llmgenie.orchestration",
    "src.llmgenie.task_router",
    "unittest.mock"
  ],
  "hash": "6edc2562c8a82e152096729256d57da4f3c2ec9bd2172eab691f18e5b87ba0fe",
  "artifact_id": "0452ccea-0afa-4ecd-8664-3991c7e5df8b"
}