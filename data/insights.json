{
  "version": "1.0.0",
  "updated": "2025-06-11T10:40:00Z",
  "insights": [
    {
      "id": "INS-001",
      "date": "2025-05-26T00:00:00Z",
      "type": "workflow_lesson",
      "epic": "meta_workflow_management",
      "description": "Ошибка: при попытке архивирования рабочих JSON-файлов данные были удалены, а не сохранены в отдельный архив. Исправлено: архивные копии восстановлены из git в data/archived_jsons/. Все рабочие файлы теперь валидны и пусты. В будущем — всегда архивировать до изменений, не использовать комментарии в JSON.",
      "tags": ["archive", "workflow", "data_safety", "lessons_learned"],
      "impact": "Улучшена дисциплина работы с данными, предотвращена потеря информации, зафиксирован стандарт архивирования."
    },
    {
      "id": "INS-002",
      "date": "2025-05-26T00:10:00Z",
      "type": "workflow_insight",
      "epic": "meta_workflow_management",
      "description": "CLI-команды должны предлагаться пользователю для проверки и автоматизации, даже если AI работает с файлами напрямую. Это повышает прозрачность и удобство.",
      "tags": ["cli", "user_experience", "workflow"],
      "impact": "Пользователь всегда может проверить результат и автоматизировать рутину." 
    },
    {
      "id": "INS-003",
      "date": "2025-05-26T00:10:00Z",
      "type": "ai_workflow_insight",
      "epic": "meta_workflow_management",
      "description": "Для AI в Cursor эффективнее работать с файлами напрямую, но важно логировать все действия и предлагать команды для пользователя.",
      "tags": ["ai", "cursor", "transparency", "logging"],
      "impact": "Сохраняется скорость работы AI и прозрачность для пользователя."
    },
    {
      "id": "INS-004",
      "date": "2025-05-26T00:10:00Z",
      "type": "meta_lesson",
      "epic": "meta_workflow_management",
      "description": "Логирование всех изменений и ошибок в meta-log или insights.json критично для анализа и улучшения процессов.",
      "tags": ["logging", "meta", "workflow", "lessons_learned"],
      "impact": "Обеспечивается возможность ретроспективы и постоянного улучшения workflow."
    },
    {
      "id": "INS-005",
      "date": "2025-05-26T00:25:00Z",
      "type": "llm_practice_insight",
      "epic": "meta_workflow_management",
      "description": "Наличие набора промтов и best practices для работы с project data и LLM-оркестрацией существенно ускоряет автоматизацию и снижает количество ошибок.",
      "tags": ["prompts", "llm", "workflow", "automation", "best_practices"],
      "impact": "Упрощает обучение новых участников и повышает эффективность LLM-автоматизации."
    },
    {
      "id": "INS-006",
      "date": "2025-05-26T00:25:00Z",
      "type": "scaling_insight",
      "epic": "meta_workflow_management",
      "description": "Централизованный статус project data может быть полезен для масштабирования, интеграции с Kanban/API и построения дашбордов.",
      "tags": ["status", "scaling", "workflow", "automation"],
      "impact": "Обеспечивает единообразие и упрощает интеграцию с внешними инструментами."
    },
    {
      "id": "INS-007",
      "date": "2025-05-26T00:45:00Z",
      "type": "meta_epic_retrospective",
      "epic": "meta_workflow_management",
      "description": "Эпик завершён: реализованы архивирование project data, стандартизация структуры, внедрение связей и меток, формализация best practices и коллекция промтов для LLM-оркестрации. Все изменения зафиксированы в документации и справочниках. Ключевые выводы: 1) Формализация связей и меток резко повышает управляемость и прозрачность; 2) Lessons learned и инсайты должны фиксироваться сразу; 3) Коллекция промтов и best practices ускоряет онбординг и автоматизацию; 4) Важно предлагать CLI-команды пользователю для контроля и автоматизации. Рекомендации: поддерживать справочники и коллекции в актуальном состоянии, ретроспективу проводить после каждого крупного эпика, интегрировать best practices в онбординг и документацию.",
      "tags": ["meta", "epic", "retrospective", "workflow", "best_practices", "llm_context"],
      "impact": "Система готова к масштабированию, интеграции с Kanban/API/CLI и эффективной работе с LLM. Подход будет корректироваться по результатам ретроспектив в будущих эпиках."
    },
    {
      "id": "INS-008",
      "date": "2025-05-27T00:00:00Z",
      "type": "meta_epic_start",
      "epic": "logging_transparency_audit",
      "description": "Запущен эпик по внедрению и стандартизации логирования: event_log, tech_log, CLI-команды, best practices. Цель — обеспечить прозрачность, управляемость и возможность ретроспективного анализа решений AI и пользователя.",
      "tags": ["logging", "transparency", "workflow", "meta", "epic_start"],
      "impact": "Будет обеспечена прозрачность процессов, ускорится ретроспектива и развитие best practices."
    },
    {
      "id": "INS-009",
      "date": "2025-05-27T00:10:00Z",
      "type": "metrics_insight",
      "epic": "logging_transparency_audit",
      "description": "Для качественного развития workflow и логирования необходима система метрик и оценки эффективности: прозрачность, скорость, количество ошибок, вовлечённость пользователя и AI. Это позволит не действовать вслепую и быстро корректировать подход.",
      "tags": ["metrics", "workflow", "logging", "evaluation", "best_practices"],
      "impact": "Будет обеспечена обратная связь, появится возможность объективно оценивать и улучшать процессы."
    },
    {
      "id": "INS-010",
      "date": "2025-05-27T12:45:00Z",
      "type": "workflow_insight",
      "epic": "logging_transparency_audit",
      "description": "Внедрение event_log, tech_log и CLI log_viewer.py обеспечило прозрачность действий AI и пользователя, ускорило анализ процессов и повысило качество ретроспективы. Стандартизация логирования и автоматизация анализа логов — ключ к управляемому развитию workflow.",
      "tags": ["logging", "cli", "workflow", "transparency", "retrospective"],
      "impact": "Упрощён аудит, ускорена ретроспектива, повышена управляемость и прозрачность процессов."
    },
    {
      "id": "INS-011",
      "date": "2025-05-27T13:45:00Z",
      "type": "epic_retrospective",
      "epic": "logging_transparency_audit",
      "description": "Эпик завершён: внедрены event_log, tech_log, масштабируемая структура логирования, CLI log_viewer.py с фильтрацией и агрегацией, стандарты анализа новых функций. Все действия и reasoning фиксируются в логах. Улучшения по автоматизации инсайтов, ретроспективы и интеграции вынесены в идеи с приоритетами. Lessons learned: 1) Прозрачность и стандартизация логирования ускоряют ретроспективу и обучение; 2) Не перегружать систему автоматизациями без явного запроса; 3) Все новые функции проходят анализ целесообразности. Рекомендации: поддерживать стандарты логирования, регулярно проводить ретроспективу, внедрять улучшения по мере появления реального запроса.",
      "tags": ["logging", "epic", "retrospective", "workflow", "lessons_learned", "transparency"],
      "impact": "Система готова к масштабированию, интеграции с внутренними и внешними инструментами, эффективной работе команды и AI."
    },
    {
      "id": "INS-2024-06-10-01",
      "date": "2024-06-10T00:00:00Z",
      "type": "workflow_insight",
      "epic": "epic_modes_and_workflow",
      "description": "Режимы ([discuss], [meta], [code], [debug]) реально работают и могут использоваться для автоматизации и фильтрации задач. Нужно описать best practices и интегрировать их в roadmap.",
      "tags": ["workflow", "modes", "meta", "roadmap"],
      "impact": "Формализация режимов повысит управляемость и прозрачность, ускорит автоматизацию и онбординг.",
      "related_ideas": ["IDEA-2024-06-10-01"]
    },
    {
      "id": "INS-2024-06-11-01",
      "date": "2024-06-11T00:00:00Z",
      "type": "workflow_insight",
      "epic": "epic_project_split_2024",
      "description": "Для безопасного и поэтапного разделения проекта используется папка ARCHIVE: все неиспользуемые или устаревшие модули и скрипты временно перемещаются туда с кратким описанием. Экспериментальные парсер и транспайлер остаются в llmstruct с пометкой о необходимости тестирования. После финального разделения ARCHIVE можно вынести в отдельный репозиторий или архив.",
      "tags": ["archive", "workflow", "split", "experimental", "llmstruct"],
      "impact": "Обеспечивает прозрачность, обратимость изменений и удобство для дальнейшей миграции и развития." 
    },
    {
      "id": "INS-2024-06-11-02",
      "date": "2024-06-11T00:30:00Z",
      "type": "decision_insight",
      "epic": "epic_project_split_2024",
      "description": "В результате ревизии: 1) workspace.py и epic.py переносятся в llmgenie, так как относятся к workflow и оркестрации; 2) dogfood.py перемещается в ARCHIVE как неиспользуемый stub; 3) для llmstruct будут реализованы новые простые метрики (структура, покрытие, производительность), все метрики workflow/LLM — только в llmgenie.",
      "tags": ["split", "decision", "archive", "llmstruct", "llmgenie", "metrics", "workflow"],
      "impact": "Чёткое разделение ответственности между проектами, упрощение ядра llmstruct, прозрачность для дальнейшей миграции и развития." 
    },
    {
      "id": "INS-2024-06-11-03",
      "date": "2024-06-11T01:00:00Z",
      "type": "decision_insight",
      "epic": "epic_project_split_2024",
      "description": "Валидатор (validate_json.py и аналоги) остаётся в llmstruct как базовый инструмент для проверки структуры и данных. В дальнейшем возможно интегрировать его в CLI. Все скрипты, связанные с оркестрацией, workflow, мета-управлением и интеграциями (например, session_cli.py, epic_roadmap_manager.py, workflow_orchestrator.py), переносятся в llmgenie. Пример: если скрипт работает только с анализом структуры или валидацией — он остаётся в llmstruct; если сессии, workflow, интеграции — в llmgenie.",
      "tags": ["split", "decision", "llmstruct", "llmgenie", "validator", "cli", "workflow"],
      "impact": "Чёткое разделение: llmstruct — только парсинг, анализ, валидация; llmgenie — оркестрация, workflow, интеграции." 
    },
    {
      "id": "INS-2024-06-11-04",
      "date": "2024-06-11T01:30:00Z",
      "type": "decision_insight",
      "epic": "epic_project_split_2024",
      "description": "Принято решение вынести ассистентский (AI) workflow в отдельный файл ai_workflow.json с версионированием, ролями (developer, librarian, llm_engineer и др.) и чек-листами для каждого этапа. Для developer-ролей добавить напоминания о возможностях llmstruct и его парсинга/JSON-выводе. В будущем — интеграция с CLI и docs.json, поддержка динамического переключения ролей и расширяемость под новые сценарии.",
      "tags": ["workflow", "ai", "roles", "llmstruct", "developer", "modularity", "decision"],
      "impact": "Упрощает восстановление фокуса, автоматизацию, масштабирование и прозрачность работы с ассистентом. Позволяет быстро адаптировать workflow под разные роли и задачи." 
    },
    {
      "id": "INS-2024-06-11-001",
      "type": "workflow_lesson",
      "epic": "epic_ai_workflow_rules_2024",
      "tags": ["lessons_learned", "workflow", "rules", "onboarding"],
      "date": "2024-06-11",
      "summary": "Стандартизация структуры .cursor/rules/ и согласование с ai_workflow.json и документацией минимизирует дублирование, ускоряет онбординг и облегчает автоматизацию. Все детали и best practices вынесены по ссылкам, базовые правила — в настройках AI." 
    },
    {
      "id": "INS-2024-06-11-002",
      "type": "epic_retrospective",
      "epic": "epic_ai_workflow_rules_2024",
      "date": "2024-06-11",
      "description": "Эпик завершён: реализованы стандартизация и заполнение структуры .cursor/rules/, согласование с ai_workflow.json и документацией, фиксация best practices и ссылок. Все действия и reasoning зафиксированы в event_log и meta_log. Ключевые выводы: 1) Формализация структуры и ссылок минимизирует дублирование и ускоряет онбординг; 2) Lessons learned и best practices должны фиксироваться сразу; 3) Все детали вынесены по ссылкам, базовые правила — в настройках AI. Рекомендации: поддерживать структуру и ссылки в актуальном состоянии, регулярно проводить ретроспективу и обновлять best practices.",
      "tags": ["epic", "retrospective", "workflow", "rules", "best_practices", "onboarding"],
      "impact": "Система готова к масштабированию, интеграции с CLI/ботами и эффективной работе с LLM и командой. Подход будет корректироваться по результатам ретроспектив в будущих эпиках."
    },
    {
      "id": "INS-2024-06-11-003",
      "type": "workflow_lesson",
      "epic": "epic_ai_workflow_rules_2024",
      "date": "2024-06-11",
      "summary": "Внедрён стандарт завершения эпика: финальный коммит, PR через gh, возврат в develop, шаблон описания PR. Это ускоряет интеграцию, повышает прозрачность и снижает вероятность ошибок при слиянии веток.",
      "tags": ["workflow", "epic_finish", "pr", "best_practices", "automation"]
    },
    {
      "id": "INS-2024-06-11-004",
      "type": "ai_workflow_lesson",
      "epic": "epic_ai_workflow_rules_2024",
      "date": "2024-06-11",
      "summary": "AI workflow скорректирован: любые проверки актуальности, архивирование и анализ файлов должны выполняться только после merge PR и git pull develop. Это предотвращает потерю данных и работу с устаревшими файлами.",
      "tags": ["ai_workflow", "merge", "pr", "best_practices", "automation"]
    },
    {
      "id": "INS-2024-06-12-01",
      "type": "workflow_lesson",
      "title": "Стандартизация хранения project data JSON-файлов",
      "description": "Обнаружено нарушение: файл ideas.json был создан в корне вместо data/. Добавлен стандарт: все project data JSON-файлы (ideas, tasks, insights, prs и др.) должны храниться в папке data/ для единообразия и автоматизации.",
      "tags": ["workflow", "lessons_learned", "data_structure"],
      "date": "2024-06-12"
    },
    {
      "id": "INS-2024-06-12-02",
      "type": "workflow_lesson",
      "title": "Сессионный контроль и тотальное логирование для всех рабочих ситуаций",
      "description": "Внедрён стандарт: для всех рабочих ситуаций (эпики, планирование, обсуждение, debug, тесты и др.) используются отдельные event_log, tech_log, meta-log для каждой сессии. Все взаимодействия (user, AI, системные) логируются. AI обязан подмечать и фиксировать возможности улучшения workflow.",
      "tags": ["workflow", "session_control", "logging", "lessons_learned"],
      "date": "2024-06-12"
    },
    {
      "id": "INS-2024-06-12-XX",
      "type": "workflow_lesson",
      "epic": "epic_session_control_2024",
      "date": "2024-06-12",
      "description": "Для AI-автоматизации и прозрачности работы с сессиями и эпиками необходим manifest-файл с перечнем актуальных JSON-файлов и гибкой политикой его использования. AI ориентируется на manifest, но допускает работу с дополнительными файлами по явному указанию пользователя или контексту задачи. Все новые или временные файлы рекомендуется оперативно добавлять в manifest для поддержания прозрачности и воспроизводимости.",
      "tags": ["workflow", "ai_automation", "manifest", "lessons_learned"]
    },
    {
      "id": "INS-2024-06-12-03",
      "type": "epic_retrospective",
      "epic": "split_initial_structure_2024-06-12",
      "date": "2024-06-12",
      "description": "Эпик завершён: llmstruct и llmgenie разделены, симлинки настроены, структура и workflow сохранены. Lessons learned и рекомендации зафиксированы в docs/report/split_initial_structure_2024-06-12/summary.md. Ключевые выводы: 1) Симлинки — эффективный способ миграции; 2) Чёткая структура и логирование ускоряют ревью; 3) Важно обновлять .gitignore и документацию своевременно. Рекомендации: Librarian — обновить README и описать работу с симлинками; Developer — протестировать ключевые сценарии; Провести ревью ARCHIVE/to_review и завершить cleanup.",
      "tags": ["epic", "retrospective", "split", "llmstruct", "llmgenie", "lessons_learned", "workflow"],
      "impact": "Проекты готовы к дальнейшему развитию, ревью и автоматизации. Структура стала чище, workflow — прозрачнее."
    },
    {
      "id": "INS-2024-06-13-01",
      "date": "2024-06-13",
      "type": "workflow_lesson",
      "epic": "epic_project_split_2024",
      "description": "После физического разделения llmstruct и llmgenie осталась сильная зависимость CLI и orchestration llmgenie от импортов llmstruct. Без явной зависимости (pip, submodule, PYTHONPATH) llmgenie не работает. В requirements/toml нет явной зависимости. Документация и CLI-примеры ориентированы на llmstruct. Нет отдельного onboarding для CLI llmgenie. В коде и документации встречаются пути и настройки, связанные с src/llmstruct/. Рекомендация: оформить зависимость, обновить документацию, переписать импорты и пути, провести smoke-тест CLI.",
      "tags": ["split", "llmstruct", "llmgenie", "cli", "workflow", "lessons_learned", "dependency"],
      "impact": "Без явной зависимости и обновления документации возможны ошибки при запуске и путаница для пользователя."
    },
    {
      "id": "INS-2024-06-13-02",
      "date": "2024-06-13",
      "type": "workflow_lesson",
      "epic": "meta_workflow_management",
      "description": "Для эффективной совместной работы и сохранения наработок приоритет — формализация и автоматизация активации правил из .cursor/rules/ (разделить на 'жёсткие' и ситуативные, описать сценарии активации). Все действия и переключения должны логироваться. Важно интегрировать workspace_state.json для восстановления/переключения контекста, если он содержит полезные шаблоны/мета-данные.",
      "tags": ["workflow", "meta", "rules", "automation", "session_control", "lessons_learned"],
      "impact": "Правильный workflow и автоматизация активации правил минимизируют потери контекста и ускоряют совместную работу."
    },
    {
      "id": "INS-2025-06-04-01",
      "date": "2025-06-04",
      "type": "workflow_lesson",
      "epic": "meta_workflow_management",
      "description": "При старте новой сессии/эпика часто отсутствуют шаблоны логов (template_event_log.json, template_tech_log.json, template_meta_log.json), скрипты для инициализации (session_cli.py) и папка для архивов (data/archived_jsons/). Это приводит к ручным ошибкам и потере времени. Рекомендация: добавить шаблоны логов по умолчанию, автоматизировать создание папок и инициализацию сессии через CLI или AI.",
      "tags": ["workflow", "session_control", "infrastructure", "lessons_learned", "automation"],
      "impact": "Автоматизация инфраструктуры старта сессии ускорит запуск новых эпиков, снизит количество ошибок и повысит воспроизводимость."
    },
    {
      "id": "INS-MODEL-001",
      "date": "2025-06-11T11:20:00Z",
      "type": "workflow_optimization",
      "epic": "meta_workflow_optimization",
      "title": "Comprehensive Cursor Models Analysis: 31 Models Available in June 2025",
      "description": "Исследование официальной документации Cursor выявило 31 доступную модель от 6 провайдеров: Anthropic Claude (6 моделей), Google Gemini (3), OpenAI (9), xAI Grok (3), DeepSeek (4), Cursor (1). Ключевые находки: Gemini 2.5 Flash - лучший бесплатный с 1M контекстом, Claude 3.7 Sonnet (текущая модель) - отличный выбор, o3-mini всего 0.25 req/msg для reasoning. Различия в цене до 200х (от 0 до 50 req/msg). Normal vs Max mode для разных задач. Auto-select рекомендуется большинству пользователей.",
      "tags": ["workflow", "models", "cursor", "pricing", "performance"],
      "key_findings": {
        "total_models": 31,
        "providers": ["Anthropic", "Google", "OpenAI", "xAI", "DeepSeek", "Cursor"],
        "free_models": ["Gemini 2.5 Flash", "GPT-4o mini", "Deepseek V3/V3.1", "Grok 3 Mini", "Cursor Small"],
        "best_context": "Gemini 2.5 Pro/Flash (1M tokens)",
        "best_reasoning": "o3, o4-mini, Deepseek R1",
        "current_model_assessment": "Claude 3.7 Sonnet - excellent choice for current work",
        "price_range": "0 to 50 requests/message (200x difference)",
        "special_modes": ["Auto-select", "Thinking", "Agentic", "Max Mode"]
      },
      "recommendations": {
        "for_current_work": "Continue with Claude 3.7 Sonnet - optimal for development tasks",
        "for_economy": "Gemini 2.5 Flash - free with huge context, Deepseek V3.1 for Agent work",
        "for_complex_tasks": "Claude 4 Opus or o3 for premium quality",
        "for_large_files": "Gemini 2.5 Pro/Flash (1M context)",
        "auto_mode": "Consider using Auto-select for adaptive model selection"
      },
      "lesson_learned": "Cursor market is more sophisticated than initially researched - proper documentation analysis essential before making recommendations"
    },
    {
      "id": "INS-2025-06-11-MODEL-001",
      "date": "2025-06-11T10:40:00Z",
      "type": "workflow_lesson",
      "epic": "model_evaluation_workflow_optimization",
      "description": "При оценке AI моделей для llmgenie важно: 1) Начинать с официального списка доступных моделей в Cursor, а не общих исследований рынка; 2) Фокусироваться на практических рекомендациях для реального workflow; 3) Учитывать специфику проекта (кодинг, анализ, архитектура).",
      "tags": ["model_evaluation", "cursor", "workflow_optimization", "research_methodology"],
      "impact": "Ускоряет выбор модели, избегает излишней детализации, фокусирует на практическом применении."
    },
    {
      "id": "INS-2025-06-11-STRUCT-001",
      "date": "2025-06-11T12:30:00Z",
      "type": "critical_workflow_error",
      "epic": "project_analysis_workflow",
      "description": "КРИТИЧЕСКАЯ ОШИБКА: AI пропустил llmstruct интеграцию при анализе проекта llmgenie. Не учёл: 1) src/struct.json (192KB) как основу для анализа; 2) src/.llmstruct_index/ modular index; 3) Rule 017_struct_tools_integration; 4) Зависимость llmgenie от llmstruct. Результат: неполный анализ архитектуры.",
      "tags": ["critical_error", "llmstruct", "project_analysis", "workflow", "context_omission"],
      "impact": "Без llmstruct контекста анализ проекта неполный. Lessons learned: всегда проверять ключевые зависимости и integration rules перед началом анализа.",
      "prevention": [
        "Проверять rules перед началом работы",
        "Искать ключевые файлы (struct.json, .llmstruct_index)",
        "Анализировать зависимости в requirements.txt",
        "Использовать modular index для понимания архитектуры"
      ]
    }
  ]
}