[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llmgenie"
version = "0.1.0"
description = "Оркестрация, автоматизация и интеграция AI-ассистентов и workflow с smart routing между моделями"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "LLMGenie Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi>=0.100.0",
    "uvicorn>=0.23.0",
    "pydantic>=2.0.0",
    "requests>=2.31.0",
    "httpx>=0.24.0",
    "python-multipart>=0.0.6",
    "jinja2>=3.1.2",
    "aiofiles>=23.1.0",
    "pyyaml>=6.0",
    "click>=8.1.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "openai>=1.0.0",
    "anthropic>=0.18.0",
    "sentence-transformers>=2.2.0",
    "faiss-cpu>=1.7.4",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "transformers>=4.30.0",
    "torch>=2.0.0",
    "tiktoken>=0.5.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "httpx>=0.24.0"
]

[project.urls]
Homepage = "https://github.com/llmgenie/llmgenie"
Repository = "https://github.com/llmgenie/llmgenie.git"
Documentation = "https://llmgenie.readthedocs.io"
"Bug Tracker" = "https://github.com/llmgenie/llmgenie/issues"

[project.scripts]
llmgenie = "core.llmgenie.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["core*"]

[tool.setuptools.package-dir]
"" = "."

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | unused
  | archive
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
skip_glob = ["unused/*", "archive/*"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
exclude = [
    "unused/",
    "archive/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto" 