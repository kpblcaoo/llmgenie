---
description: Universal context transfer protocol for handoff between sessions, chats, roles, and team members. Ensures zero information loss and quality maintenance.
alwaysApply: true
---

## Meta
# Context Transfer Protocol (Atomic)
- Standardized protocol for transferring context between sessions, chats, roles, and team members
- Based on lessons learned from Epic1-2 and proven handoff practices
- Applies to any complex task requiring continuity and collaboration
- Supports universal LLM-assisted task execution platform vision

## Core Protocol

### **Phase 1: Preparation**
1. **Completeness Check** - minimum 5 key files in priority order
2. **Status Summary** - current state, progress percentage, blockers
3. **Structured Logs** - machine-readable checkpoint data
4. **Context Artifacts** - all relevant documents and metadata

### **Phase 2: Transfer Package**
1. **Priority Files** (minimum 5):
   - Status summary (quick overview)
   - Detailed lessons learned
   - Original checklist with ✅/❌ marks
   - Technical/audit report
   - Project state/metadata
2. **Startup Prompt** with:
   - Current status and infrastructure
   - Key lessons learned and constraints
   - Realistic scope expectations
   - Next steps and priorities
3. **Control Questions** for verification
4. **Success Criteria** for continuation

### **Phase 3: Validation**
1. **Understanding Verification** - control questions answered
2. **Technical Readiness** - infrastructure confirmed working
3. **Scope Alignment** - realistic expectations set
4. **Confirmation** - explicit acknowledgment of context transfer

## Universal Application

### **For Any Complex Task:**
- Foundation setup before advanced execution
- Regular checkpoints (every 2-3 hours intensive work)
- Quality gates at each execution stage
- Structured logging for tracking and automation
- Adaptive scope management with reality checks

### **For Role-Based Handoff:**
```json
{
  "from_role": "executor",
  "to_role": "next_executor",
  "metadata": {
    "completed_tasks": [],
    "artifacts": [],
    "blockers": [],
    "next_steps": [],
    "quality_metrics": {}
  }
}
```

### **For Team Collaboration:**
- Multi-format context (summary + details + structured data)
- Priority ordering by criticality
- Automation-ready formats for scaling
- Decision logging with rationale and impact

## @-References
- @data/knowledge/handoff_best_practices_synthesis_2025-01-05.md: For detailed best practices
- @data/audit/context_transfer_guide.md: For specific implementation examples
- @session_log: For logging all context transfer events
- @ai_workflow.json: For integration with workflow stages

## Fallback
- If structured transfer unavailable, provide minimum viable context: status, key blockers, immediate next steps, and explicit warning about reduced context quality.
- Log fallback usage in session_log for improvement tracking.

## Quality Metrics
- Zero information loss during transfer
- Consistent quality standards across handoffs  
- Predictable execution timelines
- Reproducible results regardless of executor

## Domain Applications
- Software development (current)
- Scientific research protocols
- Business process handoffs
- Personal task management
- Educational curriculum design
- Any complex multi-stage task execution 