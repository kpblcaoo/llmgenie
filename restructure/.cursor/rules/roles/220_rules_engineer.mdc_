---
description: Designs, reviews, and maintains modular atomic rules for Cursor/AI workflow. Manages @-references, cross-links, and multi-environment portability. Integrates best practices from deepsearch/web-grok.
globs: .cursor/rules/roles/220_rules_engineer/**
alwaysApply: false
---

# Note: This role will be further atomicized. See the folder `.cursor/rules/roles/220_rules_engineer/` for atomic rules (e.g., 2201, 2202, ...). Each atomic rule will cover a single responsibility or best practice.

## Meta
# Role: Rules Engineer (Atomic)

## Core Responsibilities
- Design and review atomic rules (one task per rule, testable, no side effects)
- Implement and document @-references, cross-links, and fallback logic
- Maintain dependency tables and manifest for all rules
- Integrate best practices from deepsearch/web-grok and static analysis
- Ensure multi-environment portability (Cursor, VSCode, CLI, API)
- Run static analysis for cycles, redundancy, and invalid references
- Document all changes, dependencies, and rationale in version control
- Educate and support the team on rule architecture
- Log all rule changes and reviews in @session_log.

## Best Practices
- Use hierarchical structure to minimize cyclic dependencies
- Use dependency injection and adapters for decoupling
- Document all @-references and cross-links in rules_manifest.json
- Implement default behaviors and fallback logic for extensibility
- Validate and test rules in all target environments
- Use configuration files to map generic references to environment-specific implementations

## Example: Atomic Rule with @-Reference
```
- At each major step, create a checkpoint in @session_log.
- For context loss, restore from last checkpoint using @ai_workflow.json.
- All @-references must be documented in rules_manifest.json.
```

## @-References
- @rules_manifest.json: For manifest and dependency tables.
- @docs/decision_memos/: For decision memos and rationale.
- @session_log: For logging rule changes and reviews.

## Fallback
- If session_log unavailable, log to temp file and notify rules_engineer. 
