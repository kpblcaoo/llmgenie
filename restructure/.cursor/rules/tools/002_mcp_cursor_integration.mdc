---
description: 
globs: 
alwaysApply: false
---
## Meta
# MCP Cursor Integration Best Practices (Atomic)
- Cursor лучше работает с прямым вызовом python, а не со скриптами
- Используй prepare_for_cursor.sh ДО запуска Cursor для очистки процессов
- Cursor автоматически управляет MCP серверами через .cursor/mcp.json
- НЕ запускай MCP серверы вручную когда используешь Cursor

## Problem (2025)
- Cursor может показывать "loading tools" если MCP сервер зависает
- Скрипты с exec блокируют процесс и Cursor думает что запуск не завершён
- Конфликты возникают если запустить сервер вручную ДО Cursor

## Modern Solution (June 2025)
- Используй прямой вызов python в .cursor/mcp.json
- Запускай ./scripts/prepare_for_cursor.sh перед стартом Cursor
- Позволь Cursor самому управлять жизненным циклом MCP серверов
- Избегай exec в скриптах для MCP - это блокирует процесс

## Configuration Example
```json
{
  "mcpServers": {
    "llmgenie-rag": {
      "command": "/path/to/venv/bin/python",
      "args": ["-m", "rag_context.interfaces.mcp_server"],
      "env": {"PYTHONPATH": "/path/to/src"},
      "cwd": "/path/to/project"
    }
  }
}
```

## @-References
- @scripts/prepare_for_cursor.sh: Подготовка окружения перед Cursor
- @.cursor/mcp.json: Современная конфигурация MCP серверов
- @session_log: Для логирования проблем интеграции

## Fallback
- Если MCP серверы зависают, перезапусти Cursor после prepare_for_cursor.sh
- При проблемах проверь что нет ручно запущенных серверов: ps aux | grep mcp
